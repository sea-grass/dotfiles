##########
# Bash Aliases
##########
alias [p="ls;pwd;jobs"
alias ..="cd .. && pwd"

# Refresh environment
alias edb="vim ~/.bashrc ~/.bash/{aliases,env,config,goodies}; rlb"
alias rlb="source ~/.bashrc && echo '~/.bashrc reloaded'"
alias refresh_env="if [ \"x$DISPLAY\" != \"x\" ]; then xrdb -load ~/.Xresources; fi"

alias ls='ls --color=auto'
alias pj='pwd;jobs'

# Define aliases going up 1 dir to MAX_UP_DIRS dirs
# e.g. ..   = cd ..
#      ...  = cd ../..
#      .... = cd ../../..
MAX_UP_DIRS=5
for i in `seq 1 $MAX_DIRS`; do
  cmd="cd ../"
  alias=".."
  for j in `seq 1 $(($i-1))`; do
    alias="$alias."
    cmd="$cmd../"
  done
  #echo "Up $i directory: alias $alias='$cmd'"
  alias $alias="$cmd"
done

##
# Functions
##
function hawk {
  echo "`date +%F-%T` $USER: $@" >> ~/talkfile
}
function rock {
  if [ "$#" -eq "0" ]; then
    hawk_list_projects
  elif [ "$#" -eq "1" ]; then
    hawk_list_tasks $1 #Pass the project
  elif [ "$#" -eq "2" ]; then
    hawk_start_task $1 $2
  fi
}
function hawk_list_projects {
  echo "Working on..."
  echo "Projects:"
  echo "1)"
  echo "2)"
  # Log action
  echo "`date +%F-%T` $USER [List Projects]: $@" >> ~/talkfile;
}
function hawk_list_tasks {
  if [ "$#" -ne "1" ]; then
    echo "Please supply a project number"
  else
    echo "Tasks for project $1:"
    echo "1)"
    echo "2)"
  fi
  # Log action
  echo "`date +%F-%T` $USER [List Tasks ($1)]: $@" >> ~/talkfile;
}
function hawk_start_task {
  if [ "$#" -ne "2" ]; then
    echo "Please supply a project and task number"
  else
    echo "Starting project $1 task $2"
  fi
  # Log action
  echo "`date +%F-%T` $USER [Start Task ($1 - $2)]: $@" >> ~/talkfile;
}

function test {
  echo "$@"
  echo "$?"
  echo "$*"
}

# TODO: Add a link to source for aur() function
# TODO: Add check for Arch Linux before defining this function
function aur {
  if [ "$#" -ne 1 ]; then
    echo "Usage: $0 aur-package-name (Downloads aur-package-name.tar.gz)"
    return -1
  fi
  base=https://aur.archlinux.org/packages
  pkg=$1
  echo "Downloading $pkg.tar.gz from aur"
  file=${pkg}.tar.gz
  url=$base/${pkg:0:2}/${pkg}/$file

  curl $url > $file

  unset pkg
  unset base
  unset url
  unset file
}

function yee {
  #TODO: After midnight, change prompt to YEEEEEEEEBOIIIIIII
  # From 12am to 6am
  if [ "$PS1" == "$PS11" ]; then
    PS1="$PS12"
  else
    PS1="$PS11"
  fi
}

alias npm-exec="PATH=$(npm bin):$PATH"
